swagger: "2.0"
info:
  version: "0.0.1"
  title: TAR
# during dev, should point to your local machine
host: localhost:10010
# basePath prefixes all resource paths 
basePath: /api
# 
schemes:
  # tip: remove http to make production-grade
  - http
  - https
# format of bodies a client can send (Content-Type)
consumes:
  - application/json
# format of the responses to the client (Accepts)
produces:
  - application/json
  
parameters:
  node_id:
    name: node_id
    type: string
    in: path
    required: true
  report_id:
    name: report_id
    type: string
    in: path
    required: true
  policy_id:
    name: policy_id
    type: string
    in: path
    required: true
  mspl_id:
    name: mspl_id
    type: string
    in: path
    required: true
  configuration_id:
    name: configuration_id
    type: string
    in: path
    required: true
  q_mspl_id:
    name: mspl_id
    type: string
    in: query
  q_policy_id:
    name: policy_id
    type: string
    in: query
  device_product:
    name: device_product
    type: string
    in: query
  device_version:
    name: device_version
    type: string
    in: query
  pilot:
    name: pilot
    type: string
    in: query
  
paths:
  /nodes:
    x-swagger-router-controller: nodes
    get:
      description: lists nodes
      operationId: listNodes
      responses:
        "200":
          description: Success
          schema:
            type: array
            items:
              $ref: "#/definitions/Node"
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
    post:
      description: creates new node
      parameters:
        - name: data
          in: body
          required: true
          schema:
            $ref: "#/definitions/NodeCU"
      operationId: createNode
      responses:
        "201":
          description: Created
          schema:
            $ref: "#/definitions/Node"
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
            
  /nodes/{node_id}:
    x-swagger-router-controller: nodes
    parameters:
      - $ref: "#/parameters/node_id"
    get:
      description: gets node by id
      operationId: getNode
      responses:
        "200":
          description: Success
          schema:
            $ref: "#/definitions/Node"
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
            
  /nodes/{node_id}/status:
    x-swagger-router-controller: nodes
    parameters:
      - $ref: "#/parameters/node_id"
    put:
      description: sets node status
      operationId: setNodeStatus
      parameters:
        - name: data
          in: body
          required: true
          schema:
            required:
              - status
            properties:
              status:
                type: string
      responses:
        "200":
          description: Success
          schema:
            $ref: "#/definitions/Node"
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
            
  /nodes/{node_id}/reports:
    x-swagger-router-controller: reports
    parameters:
      - $ref: "#/parameters/node_id"
    get:
      description: lists node reports
      operationId: listReports
      responses:
        "200":
          description: Success
          schema:
            type: array
            items:
              $ref: "#/definitions/Report"
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
    post:
      description: creates new node report
      parameters:
        - name: data
          in: body
          required: true
          schema:
            $ref: "#/definitions/ReportCU"
      operationId: createReport
      responses:
        "201":
          description: Created
          schema:
            $ref: "#/definitions/Report"
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
            
  /nodes/{node_id}/reports/{report_id}:
    x-swagger-router-controller: reports
    parameters:
      - $ref: "#/parameters/node_id"
      - $ref: "#/parameters/report_id"
    get:
      description: gets report by id
      operationId: getReport
      responses:
        "200":
          description: Success
          schema:
            $ref: "#/definitions/Report"
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
            
  /reports:
    x-swagger-router-controller: reports
    get:
      description: lists node reports
      operationId: listReportsStandalone
      parameters:
        - $ref: "#/parameters/pilot"
      responses:
        "200":
          description: Success
          schema:
            type: array
            items:
              $ref: "#/definitions/ReportNoNode"
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
    post:
      description: creates new node report
      parameters:
        - name: data
          in: body
          required: true
          schema:
            $ref: "#/definitions/ReportCU"
      operationId: createReportStandalone
      responses:
        "201":
          description: Created
          schema:
            $ref: "#/definitions/ReportNoNode"
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
            
  /reports/{report_id}:
    x-swagger-router-controller: reports
    parameters:
      - $ref: "#/parameters/report_id"
    get:
      description: gets report by id
      operationId: getReportStandalone
      responses:
        "200":
          description: Success
          schema:
            $ref: "#/definitions/ReportNoNode"
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
  /reports/v2:
    x-swagger-router-controller: reports
    get:
      parameters:
        - $ref: "#/parameters/device_product"
        - $ref: "#/parameters/device_version"
        - $ref: "#/parameters/pilot"
      description: lists node reports
      operationId: listReportsCEFStandalone
      responses:
        "200":
          description: Success
          schema:
            type: array
            items:
              $ref: "#/definitions/ReportCEFNoNode"
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
    post:
      description: creates new node report
      parameters:
        - name: data
          in: body
          required: true
          schema:
            $ref: "#/definitions/ReportCEFCU"
      operationId: createReportCEFStandalone
      responses:
        "201":
          description: Created
          schema:
            $ref: "#/definitions/ReportCEFNoNode"
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
            
  /reports/v2/{report_id}:
    x-swagger-router-controller: reports
    parameters:
      - $ref: "#/parameters/report_id"
    get:
      description: gets report by id
      operationId: getReportCEFStandalone
      responses:
        "200":
          description: Success
          schema:
            $ref: "#/definitions/ReportCEFNoNode"
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
  /policies:
    x-swagger-router-controller: policies
    get:
      description: gets list of policies
      operationId: listPolicies
      responses:
        "200":
          description: Success
          schema:
            type: array
            items:
              $ref: "#/definitions/Policy"
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
    post:
      description: create a new policy
      operationId: createPolicy
      parameters:
        - name: data
          in: body
          required: true
          schema:
            $ref: "#/definitions/PolicyCU"
      responses:
        "201":
          description: Success
          schema:
            $ref: "#/definitions/Policy"
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"

  /policies/{policy_id}:
    x-swagger-router-controller: policies
    parameters:
      - $ref: "#/parameters/policy_id"
    get:
      description: gets policy
      operationId: getPolicy
      responses:
        "200":
          description: Success
          schema:
            $ref: "#/definitions/Policy"
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
    delete:
      description: deletes policy
      operationId: deletePolicy
      responses:
        "204":
          description: Success
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
  /mspl:
    x-swagger-router-controller: msplconfig
    get:
      parameters:
        - $ref: "#/parameters/q_policy_id"
      description: get list of medium level policies
      operationId: listMspl
      responses:
        "200":
          description: success
          schema:
            type: array
            items:
              $ref: "#/definitions/MSPL"
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
    post:
      description: create a new medium level policy
      operationId: createMspl
      parameters:
        - name: data
          in: body
          required: true
          schema:
            $ref: "#/definitions/MSPLCU"
      responses:
        "201":
          description: Success
          schema:
            $ref: "#/definitions/MSPL"
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
  /mspl/{mspl_id}:
    x-swagger-router-controller: msplconfig
    parameters:
      - $ref: "#/parameters/mspl_id"
    get:
      description: gets medium level policy
      operationId: getMspl
      responses:
        "200":
          description: Success
          schema:
            $ref: "#/definitions/MSPL"
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
    delete:
      description: deletes medium level policy
      operationId: deleteMspl
      responses:
        "204":
          description: Success
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
            
  /configurations:
    x-swagger-router-controller: msplconfig
    get:
      parameters:
        - $ref: "#/parameters/q_mspl_id"
      description: get list of configurations
      operationId: listConfigurations
      responses:
        "200":
          description: success
          schema:
            $ref: "#/definitions/Configuration"
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
    post:
      description: create a new medium level policy
      operationId: createConfiguration
      parameters:
        - name: data
          in: body
          required: true
          schema:
            $ref: "#/definitions/ConfigurationCU"
      responses:
        "201":
          description: Success
          schema:
            $ref: "#/definitions/Configuration"
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
  /configurations/{configuration_id}:
    x-swagger-router-controller: msplconfig
    parameters:
      - $ref: "#/parameters/configuration_id"
    get:
      description: gets configuration
      operationId: getConfiguration
      responses:
        "200":
          description: Success
          schema:
            $ref: "#/definitions/Configuration"
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
    delete:
      description: deletes configuration
      operationId: deleteConfiguration
      responses:
        "204":
          description: Success
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
          

  /swagger:
    x-swagger-pipe: swagger_raw
# complex objects have schema definitions
definitions:
  NodeCU:
    required:
      - name
      - status
    properties:
      name:
        type: string
      status:
        type: string
  
  Node:
    allOf:
      - $ref: "#/definitions/NodeCU"
      - required:
        - id
        properties:
          id:
            type: string
            
  ReportCU:
    required:
      - source
      - data
    properties:
      source:
        type: string
      data:
        type: string
      pilot:
        type: ['string', 'null']

  ReportNoNode:
    allOf:
      - $ref: "#/definitions/ReportCU"
      - required:
        - id
        properties:
          id:
            type: string
            
  ReportCEFCU:
    required:
      - device_product
      - event_name
      - device_event_class_id
      - severity
    properties:
      device_product:
        type: string
      device_version:
        type: string
      event_name:
        type: string
      device_event_class_id:
        type: string
      severity:
        type: string
      extensions_list:
        type: string
      pilot:
        type: ['string', 'null']

  ReportCEFNoNode:
    allOf:
      - $ref: "#/definitions/ReportCEFCU"
      - required:
        - id
        properties:
          id:
            type: string

  Report:
    allOf:
      - $ref: "#/definitions/ReportNoNode"
      - required:
        - node_id
        properties:
          node_id:
            type: string

  PolicyCU:
    required:
      - source
      - status
      - timestamp
    properties:
      source:
        type: string
      status:
        type: string
      timestamp:
        type: string
      HSPL:
        type: string
      attack_info:
        properties:
          name:
            type: string
          type:
            type: string
          location:
            type: string

  Policy:
    allOf:
      - $ref: "#/definitions/PolicyCU"
      - required:
        - id
        properties:
          id:
            type: string
            
  MSPLCU:
    required:
      - source
      - status
      - timestamp
      - data
    properties:
      source:
        type: string
      status:
        type: string
      timestamp:
        type: string
      data:
        type: string
      policy_id:
        type: ['string', 'null']
        
  MSPL:
    allOf:
      - $ref: "#/definitions/MSPLCU"
      - required:
        - id
        properties:
          id:
            type: string
        
  ConfigurationCU:
    required:
      - source
      - status
      - timestamp
      - data
    properties:
      source:
        type: string
      status:
        type: string
      timestamp:
        type: string
      data:
        type: string
      mspl_id:
        type: ['string', 'null']
        
  Configuration:
    allOf:
      - $ref: "#/definitions/ConfigurationCU"
      - required:
        - id
        properties:
          id:
            type: string

  ErrorResponse:
    required:
      - message
    properties:
      message:
        type: string
