---
- import_tasks: configs/k8s-secrets.yml

- name: create service template path
  become: yes
  file:
    path: "{{ service_config_dir }}/service_templates"
    state: directory
    owner: root
    group: root
    mode: 0755

- name: set manual pvc flag to false
  set_fact:
    has_volume_with_manual_pvc: False
    has_volume_with_auto_pvc: False

- name: update manual pvc to true if it exist
  set_fact:
    has_volume_with_manual_pvc: True
  with_items: "{{ service_volume_mounts }}"
  when: 'service_volume_mounts is defined and item.pvc is defined'

- name: update auto pvc to true if it exist
  set_fact:
    has_volume_with_auto_pvc: True
  with_items: "{{ service_volume_mounts }}"
  when: 'service_volume_mounts is defined and item.pvc is not defined'

- name: set default service memory request if not
  set_fact:
    default_service_memory_request: "128Mi"
  when: default_service_memory_request is not defined

- name: set default service cpu request if not
  set_fact:
    default_service_cpu_request: "100m"
  when: default_service_cpu_request is not defined


- name: copy service template to remote host
  template:
    src: k8s.service.yml.j2
    dest: "{{ service_config_dir }}/service_templates/{{ service_name }}.yml"
    mode: 0644
  register: service_template_changed

- name: check if  deployment {{ service_name }} already exists
  become: no
  command: kubectl --namespace {{ k8s_namespace }} get deployment {{ service_name }}
  register: deployment_exists
  ignore_errors: True

- name: check if  statefulset {{ service_name }} already exists
  become: no
  command: kubectl --namespace {{ k8s_namespace }} get statefulset {{ service_name }}
  register: statefulset_exists
  ignore_errors: True

- name: start k8s service
  become: no
  command: kubectl --namespace {{ k8s_namespace }} apply -f {{ service_config_dir }}/service_templates/{{ service_name }}.yml
  when: deployment_exists is failed and statefulset_exists is failed

- name: replace k8s service
  become: no
  command: kubectl --namespace {{ k8s_namespace }} replace --force  -f {{ service_config_dir }}/service_templates/{{ service_name }}.yml
  when: deployment_exists is not failed or statefulset_exists is not failed

- name: Wait for deployment to start
  include_tasks: "wait-kub-pod-status.yml"
  when: service_expected_status is defined
