---
- import_tasks: facts/common.yml
- name: Check if service {{ service_name_altered }} already exists
  command: docker service inspect {{ service_name_altered }}
  register: service_exists
  ignore_errors: True

- meta: end_play
  when: no_restart is defined and no_restart and not force_restart and service_exists is succeeded

- name: If {{ service_name_altered }} already running, remove it
  command: docker service rm {{ service_name_altered }}
  when: service_exists is succeeded

- import_tasks: configs/swarm-secrets.yml

- name: Set secret config argument to empty
  set_fact: secret_config_arg=""

- name: Set secret config argument for multiple secrets
  set_fact: secret_config_arg="{{ secret_config_arg }} --secret source={{ service_name_altered }}-{{ item.id }},target={{ item.dst_path  | default(item.path) }}"
  when: service_configs is defined
  with_items: "{{ service_configs }}"

- name: set service versions file mount argument to empty if service is not service versions
  set_fact: versions_arg=""

- name: set service versions file mount argument
  set_fact: versions_arg="--secret source=service-versions,target={{ service_versions_path }}"
  when: serve_versions is defined and serve_versions

- name: Run swarm service {{ service_name_altered }}
  command: >
           docker service create --name {{ service_name_altered }} {{ port_arg }} {{ versions_arg }}
           {{ mount_arg }} {{ secret_config_arg }} {{ env_arg }} {{ external_domain_arg }}
           {{ dns_arg }} {{ external_dns_arg }} {{ network_arg }} --network bridge --with-registry-auth --update-monitor 1s {{ service_image }}
